{"version":3,"sources":["assets/logo.svg","shared/components/bootstrap_input.js","shared/components/constants.js","shared/components/search_form.js","features/home/index.js","shared/components/error_message.js","shared/hooks/use_query_param.js","shared/components/header.js","assets/artist.svg","shared/helpers/index.js","features/search/artist_card.js","features/search/artist_card_skeleton.js","features/search/ql_queries.js","features/search/index.js","assets/album.svg","features/artist/album_card.js","features/artist/album_card_skeleton.js","features/artist/ql_queries.js","features/artist/track_tile.js","features/artist/track_tile_skeleton.js","features/artist/album_tracks.js","features/artist/helpers.js","features/artist/title.js","features/artist/title_skeleton.js","features/artist/index.js","app/routes.js","app/app.js","reportWebVitals.js","shared/repositories/index.js","configs.js","index.js"],"names":["BootstrapInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","borderColor","boxShadow","InputBase","QUERY_TYPE","useStyles","makeStyles","searchBox","textAlign","display","justifyContent","searchField","margin","flex","selectField","SearchForm","queryParam","query","queryTypeParam","queryType","onQueryChange","onQueryTypeChange","onSubmit","className","classes","history","useHistory","useState","setQuery","setQueryType","push","Paper","component","id","classNames","variant","placeholder","inputProps","defaultValue","onChange","e","target","value","onKeyPress","key","preventDefault","stopPropagation","startAdornment","InputAdornment","Divider","orientation","flexItem","Select","MenuItem","logoContainer","logo","width","HomePage","Container","maxWidth","src","alt","flexDirection","placeItems","icon","color","height","messageArea","message","ErrorMessage","elevation","Typography","gutterBottom","Button","onClick","window","location","reload","useQueryParam","URLSearchParams","useLocation","search","appBar","searchForm","Header","onSearch","queryParameters","AppBar","Toolbar","get","getConnectionCursor","hashValue","decodedValue","atob","matches","exec","length","shouldFetchMore","endCursor","currentCursor","artistCard","minWidth","maxHeight","albumImages","artistImage","caption","overflow","textOverflow","whiteSpace","rating","float","marginBottom","ArtistCard","artist","onSeen","Card","CardActionArea","node","mbid","CardMedia","title","name","mediaWikiImages","url","artistIcon","CardContent","disambiguation","voteCount","Rating","size","readOnly","cursor","onEnter","box","ArtistCardSkeleton","Box","Skeleton","MB_SEARCH_ARTIST","gql","generateQuery","type","resultContainer","flexWrap","gridList","SearchPage","useTheme","mediaQueryMatch","useMediaQuery","breakpoints","up","isFetchingMore","setIsFetchingMore","useLazyQuery","errorPolicy","loading","error","data","fetchMore","navigateToArtist","searchQuery","variables","artists","pageInfo","hasNextPage","useEffect","GridList","cellHeight","cols","Array","keys","map","i","edges","albumCard","titleTypography","AlbumCard","photos","layout","showNumOfRemainingPhotos","source","AlbumIcon","default","AlbumCardSkeleton","animation","MB_LOOKUP_ARTIST","MB_LOOKUP_RELEASE","tile","minHeight","TrackTile","rateValue","GridListTile","GridListTileBar","subtitle","precision","marginLeft","marginRight","TrackTileSkeleton","trackTypography","tracksGridList","AlbumTracks","album","onClose","useQuery","IconButton","edge","lookup","release","recordings","nodes","getTracks","track","preparePhotoList","coverArtArchive","artwork","images","reduce","accumulator","currentValue","thumbnails","large","flexGrow","alignItems","avatar","nameTypography","artistInfoBox","Title","avatarUri","Avatar","TitleSkeleton","container","albumTypography","albumGridList","ArtistPage","selectedAlbum","selectAlbum","useParams","getArtist","handleAlbumOnClick","releases","Routes","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","fetchOptions","mode","connectToDevTools","cache","InMemoryCache","typePolicies","Query","fields","keyArgs","merge","existing","incoming","args","Object","merged","JSON","parse","stringify","existingKey","incomingKey","createMuiTheme","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.da34465e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.971b74a3.svg\";","import { InputBase, withStyles } from \"@material-ui/core\";\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 0,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"0px solid #ced4da\",\n    fontSize: 16,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#fffff\",\n      backgroundColor: \"#ffffff\",\n      boxShadow: \"255 255 255 0.2rem rgba(0,0,0,.25)\",\n    },\n  },\n}))(InputBase);\n\nexport default BootstrapInput;\n","export const QUERY_TYPE = {\n  ARTIST: \"artist\",\n  GENRE: \"genre\",\n};\n","import {\n  Divider,\n  InputAdornment,\n  InputBase,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport BootstrapInput from \"../../shared/components/bootstrap_input\";\nimport { QUERY_TYPE } from \"./constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchBox: {\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    borderRadius: 50,\n  },\n  searchField: {\n    margin: theme.spacing(1),\n    flex: 1,\n  },\n  selectField: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction SearchForm({\n  query: queryParam,\n  queryType: queryTypeParam,\n  onQueryChange,\n  onQueryTypeChange,\n  onSubmit,\n  className,\n}) {\n  const classes = useStyles();\n  className = className || {};\n\n  const history = useHistory();\n  const [query, setQuery] = useState(queryParam || \"\");\n  const [queryType, setQueryType] = useState(\n    queryTypeParam || QUERY_TYPE.ARTIST\n  );\n\n  const handleQueryTypeChange = (e) => {\n    setQueryType(e.target.value);\n    onQueryTypeChange && onQueryTypeChange();\n  };\n  const handleQueryChange = (e) => {\n    setQuery(e.target.value);\n    onQueryChange && onQueryChange();\n  };\n\n  onSubmit =\n    onSubmit ||\n    (() => {\n      if (query && query !== \"\") {\n        history.push(`/search?query=${query}&type=${queryType}`);\n      }\n    });\n\n  const onKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      e.stopPropagation();\n      onSubmit();\n    }\n  };\n\n  return (\n    <Paper\n      component=\"form\"\n      id=\"searchBox\"\n      className={classNames(classes.searchBox, className)}\n      variant=\"outlined\"\n    >\n      <InputBase\n        id=\"query\"\n        className={classes.searchField}\n        placeholder=\"Search Artist\"\n        inputProps={{ \"aria-label\": \"search artist\" }}\n        defaultValue={query || \"\"}\n        onChange={handleQueryChange}\n        onKeyPress={onKeyPress}\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        }\n      />\n      <Divider orientation=\"vertical\" flexItem />\n      <Select\n        id=\"queryType\"\n        className={classes.selectField}\n        value={queryType || QUERY_TYPE.ARTIST}\n        input={<BootstrapInput />}\n        onChange={handleQueryTypeChange}\n      >\n        <MenuItem value={QUERY_TYPE.ARTIST}>Artist</MenuItem>\n        <MenuItem value={QUERY_TYPE.GENRE}>Genre</MenuItem>\n      </Select>\n    </Paper>\n  );\n}\n\nSearchForm.propTypes = {\n  className: PropTypes.string,\n  query: PropTypes.string,\n  queryType: PropTypes.string,\n  onQueryChange: PropTypes.func,\n  onQueryTypeChange: PropTypes.func,\n};\n\nexport default SearchForm;\n","import { Container, makeStyles } from \"@material-ui/core\";\nimport logo from \"../../assets/logo.svg\";\nimport SearchForm from \"../../shared/components/search_form\";\n\nconst useStyles = makeStyles((theme) => ({\n  logoContainer: {\n    textAlign: \"center\",\n    marginTop: 50,\n  },\n  logo: {\n    width: 256,\n  },\n  searchBox: {\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    borderRadius: 50,\n  },\n  searchField: {\n    margin: theme.spacing(1),\n    flex: 1,\n  },\n  selectField: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction HomePage() {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"sm\">\n      <div id=\"logoContainer\" className={classes.logoContainer}>\n        <img src={logo} className={classes.logo} alt=\"MusicBrainz QL logo\" />\n      </div>\n      <SearchForm />\n    </Container>\n  );\n}\n\nexport default HomePage;\n","import { Button, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport ErrorIcon from \"@material-ui/icons/ErrorOutline\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    display: \"flex\",\n    padding: 10,\n    justifyContent: \"space-around\",\n    flexDirection: \"column\",\n    placeItems: \"center\",\n    width: '100%'\n  },\n  icon: {\n    color: \"#ba000d\",\n    margin: \"16px 8px\",\n    height: 24,\n    width: 24,\n  },\n  messageArea: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    placeItems: \"center\",\n  },\n  message: {\n    color: \"#b2102f\",\n    margin: \"16px 8px\",\n  },\n}));\n\nfunction ErrorMessage() {\n  const classes = useStyles();\n  const handleOnClick = () => window.location.reload();\n\n  return (\n    <Paper elevation={3} className={classes.paper}>\n      <div className={classes.messageArea}>\n        <ErrorIcon className={classes.icon} />\n        <Typography className={classes.message} variant=\"h6\" gutterBottom>\n          Some thing went wrong\n        </Typography>\n      </div>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleOnClick}>\n        Retry\n      </Button>\n    </Paper>\n  );\n}\n\nexport default ErrorMessage;\n","import { useLocation } from \"react-router-dom\";\n\nfunction useQueryParam() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default useQueryParam;\n","import { AppBar, makeStyles, Toolbar } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport logo from \"../../assets/logo.svg\";\nimport SearchForm from \"../../shared/components/search_form\";\nimport { useQueryParam } from \"../../shared/hooks\";\n\nconst useStyles = makeStyles(() => ({\n  appBar: {\n    color: \"#ba478f\",\n    background: \"#ffffff\",\n  },\n  logo: {\n    width: 48,\n    height: 48,\n  },\n  searchForm: {\n    width: \"80vw\",\n    maxWidth: 629,\n    height: 47,\n    margin: \"10px 20px\",\n  },\n}));\n\nfunction Header({ query, queryType, onSearch }) {\n  const classes = useStyles();\n  const queryParameters = useQueryParam();\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <img src={logo} className={classes.logo} alt=\"Music Brainz QL\" />\n          <SearchForm\n            query={query || queryParameters.get(\"query\")}\n            queryType={queryType || queryParameters.get(\"type\")}\n            onSubmit={onSearch}\n            className={classes.searchForm}\n          />\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </>\n  );\n}\n\nHeader.propTypes = {\n  query: PropTypes.string,\n  queryType: PropTypes.string,\n  onSearch: PropTypes.func,\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/artist.38d91297.svg\";","export const getConnectionCursor = (hashValue) => {\n  const decodedValue = atob(hashValue);\n  const regex = /arrayconnection:(\\d+)/gm;\n  const matches = regex.exec(decodedValue);\n\n  return matches && matches.length > 1 ? +matches[1] : 0;\n};\n\nexport const shouldFetchMore = (endCursor, currentCursor) =>\n  getConnectionCursor(endCursor) - getConnectionCursor(currentCursor) === 7;\n","import {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport PropTypes from \"prop-types\";\nimport { Waypoint } from \"react-waypoint\";\nimport artistIcon from \"../../assets/artist.svg\";\nimport { shouldFetchMore } from \"../../shared/helpers\";\n\nconst useStyles = makeStyles(() => ({\n  artistCard: {\n    width: 300,\n    minWidth: 200,\n    maxHeight: \"208px !important\",\n    margin: 5,\n  },\n  albumImages: {\n    height: 118,\n    textAlign: \"center\",\n    background: \"lightgrey\",\n  },\n  artistImage: {\n    width: \"auto\",\n    height: \"100%\",\n  },\n  caption: {\n    maxWidth: \"50%\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"inline-block\",\n    whiteSpace: \"nowrap\",\n  },\n  rating: {\n    float: \"right\",\n    marginBottom: 5,\n  },\n}));\n\nfunction ArtistCard({ artist, endCursor, onClick, onSeen }) {\n  const classes = useStyles();\n  const handleOnClick = () => onClick(artist.node.mbid);\n\n  return (\n    <Card className={classes.artistCard}>\n      <CardActionArea onClick={handleOnClick}>\n        <CardMedia className={classes.albumImages} title={artist.node.name}>\n          <img\n            alt={artist.node.name}\n            src={\n              artist.node.mediaWikiImages.length\n                ? artist.node.mediaWikiImages[0].url\n                : artistIcon\n            }\n            className={classes.artistImage}\n          />\n        </CardMedia>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>\n            {artist.node.name}\n          </Typography>\n          <Typography\n            className={classes.caption}\n            variant=\"caption\"\n            gutterBottom\n          >\n            {artist.node.disambiguation}\n          </Typography>\n          <Typography\n            className={classes.rating}\n            variant=\"caption\"\n            display=\"inline\"\n            gutterBottom\n          >\n            ({artist.node.rating.voteCount || 0})\n          </Typography>\n          <Rating\n            className={classes.rating}\n            size=\"small\"\n            value={artist.node.rating?.value}\n            readOnly\n          />\n          {shouldFetchMore(endCursor, artist.cursor) && (\n            <Waypoint onEnter={() => onSeen(true)} />\n          )}\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nArtistCard.propTypes = {\n  endCursor: PropTypes.string,\n  artist: PropTypes.object.isRequired,\n  onClick: PropTypes.func,\n  onSeen: PropTypes.func,\n};\n\nexport default ArtistCard;\n","import { Box, makeStyles } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst useStyles = makeStyles(() => ({\n  box: {\n    width: 300,\n    minWidth: 200,\n    maxHeight: \"208px !important\",\n    margin: 5,\n  },\n}));\n\nfunction ArtistCardSkeleton() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.box}>\n      <Skeleton variant=\"rect\" width=\"100%\" height={118} />\n      <Skeleton variant=\"text\" />\n      <Skeleton variant=\"text\" width=\"60%\" />\n    </Box>\n  );\n}\n\nexport default ArtistCardSkeleton;\n","import {gql} from '@apollo/client';\n\nexport const MB_SEARCH_ARTIST = gql`\nquery Artist($query: String!, $endCursor: String) {\n  search {\n    artists(query: $query, first: 15, after: $endCursor) {\n      ...artistsResults\n    }\n  }\n}\n\nfragment artistsResults on ArtistConnection {\n  pageInfo {\n    endCursor\n    hasNextPage\n  }\n  edges {\n    cursor\n    node {\n      mbid\n      name\n      disambiguation\n      type\n      mediaWikiImages {\n        url\n      }\n      rating {\n        voteCount\n        value\n      }\n    }\n  }\n}\n`;\n","import { useLazyQuery } from \"@apollo/client\";\nimport {\n  Container,\n  GridList,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { QUERY_TYPE } from \"../../shared/components/constants\";\nimport ErrorMessage from \"../../shared/components/error_message\";\nimport Header from \"../../shared/components/header\";\nimport { useQueryParam } from \"../../shared/hooks\";\nimport ArtistCard from \"./artist_card\";\nimport ArtistCardSkeleton from \"./artist_card_skeleton\";\nimport { MB_SEARCH_ARTIST } from \"./ql_queries\";\n\nconst generateQuery = (query, type) => {\n  switch (type) {\n    case QUERY_TYPE.ARTIST:\n      return `name: \"${query}\"`;\n    case QUERY_TYPE.GENRE:\n      return `tag: \"${query}\"`;\n    default:\n      return query;\n  }\n};\n\nconst useStyles = makeStyles(() => ({\n  resultContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    overflow: \"hidden\",\n    justifyContent: \"space-around\",\n    marginTop: 20,\n    padding: 0,\n  },\n  gridList: {\n    height: \"80vh\",\n    width: \"100vw\",\n    justifyContent: \"space-around\",\n  },\n  artistCard: {\n    width: 300,\n    minWidth: 200,\n    maxHeight: \"208px !important\",\n    margin: 5,\n  },\n  albumImages: {\n    height: 118,\n    textAlign: \"center\",\n    background: \"lightgrey\",\n  },\n  artistImage: {\n    width: \"auto\",\n    height: \"100%\",\n  },\n}));\n\nfunction SearchPage() {\n  const classes = useStyles();\n  const queryParameters = useQueryParam();\n  const history = useHistory();\n\n  const theme = useTheme();\n  const mediaQueryMatch = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const [isFetchingMore, setIsFetchingMore] = useState(false);\n  const [search, { loading, error, data, fetchMore }] = useLazyQuery(\n    MB_SEARCH_ARTIST,\n    { errorPolicy: \"ignore\" }\n  );\n\n  const navigateToArtist = (id) => history.push(`/artist/${id}`);\n  const searchQuery = (shouldFetchMore) => {\n    const variables = {\n      query: generateQuery(\n        queryParameters.get(\"query\"),\n        queryParameters.get(\"type\")\n      ),\n    };\n    if (!shouldFetchMore) {\n      search({\n        variables,\n      });\n    } else if (data.search.artists.pageInfo.hasNextPage) {\n      setIsFetchingMore(true);\n      fetchMore({\n        variables: {\n          ...variables,\n          endCursor: data.search.artists.pageInfo.endCursor,\n        },\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (queryParameters.get(\"query\")) {\n      searchQuery();\n    } else {\n      return history.push(\"/\");\n    }\n  }, [queryParameters.get(\"query\"), queryParameters.get(\"type\")]);\n\n  useEffect(() => {\n    setIsFetchingMore(false);\n  }, [data]);\n\n  return (\n    <>\n      <Header />\n      <Container maxWidth=\"xl\" className={classes.resultContainer}>\n        {error && <ErrorMessage />}\n        <GridList\n          cellHeight={208}\n          className={classes.gridList}\n          spacing={0}\n          cols={mediaQueryMatch ? 5 : 2}\n        >\n          {loading &&\n            !error &&\n            [...new Array(50).keys()].map((i) => (\n              <ArtistCardSkeleton key={i} />\n            ))}\n          {data &&\n            !error &&\n            data.search.artists.edges.map(\n              (artist, i) =>\n                // There is a null value in the response of the query it happens always at record 162.\n                // TODO: I need to investigate more to find the reason in the BE code.\n                artist.node && (\n                  <ArtistCard\n                    key={i}\n                    artist={artist}\n                    endCursor={data.search.artists.pageInfo.endCursor}\n                    onClick={navigateToArtist}\n                    onSeen={searchQuery}\n                  />\n                )\n            )}\n          {isFetchingMore &&\n            [...new Array(5).keys()].map((i) => <ArtistCardSkeleton key={i} />)}\n        </GridList>\n      </Container>\n    </>\n  );\n}\n\nexport default SearchPage;\n","export default __webpack_public_path__ + \"static/media/album.32370559.svg\";","import {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { ReactPhotoCollage } from \"react-photo-collage\";\nimport AlbumIcon from \"../../assets/album.svg\";\n\nconst useStyles = makeStyles(() => ({\n  albumImages: {\n    height: 200,\n    textAlign: \"center\",\n    background: \"lightgrey\",\n  },\n  albumCard: {\n    maxWidth: 500,\n    minWidth: \"300px !important\",\n    width: 350,\n    maxHeight: 300,\n    margin: 5,\n  },\n  CardContent: {\n    height: \"100%\",\n  },\n  titleTypography: {\n    maxWidth: \"50%\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"inline-block\",\n    whiteSpace: \"nowrap\",\n  },\n}));\n\nfunction AlbumCard({ title, photos, onClick }) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.albumCard}>\n      <CardMedia className={classes.albumImages}>\n        <ReactPhotoCollage\n          width=\"100%\"\n          height={photos && photos.length > 4 ? [\"150px\", \"50px\"] : [\"200px\"]}\n          layout={photos && photos.length > 4 ? [1, 4] : [photos.length]}\n          showNumOfRemainingPhotos\n          photos={photos.length > 0 ? photos : [{ source: AlbumIcon.default }]}\n        />\n      </CardMedia>\n      <CardActionArea onClick={onClick}>\n        <CardContent>\n          <Typography\n            className={classes.titleTypography}\n            variant=\"h5\"\n            gutterBottom\n          >\n            {title}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nAlbumCard.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  photos: PropTypes.arrayOf(PropTypes.object),\n  onClick: PropTypes.func,\n};\n\nexport default AlbumCard;\n","import { Card, CardContent, CardMedia, makeStyles } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme) => ({\n  albumImages: {\n    height: 200,\n    textAlign: \"center\",\n    background: \"lightgrey\",\n  },\n  albumCard: {\n    maxWidth: 500,\n    minWidth: \"300px !important\",\n    maxHeight: 300,\n    margin: 5,\n  },\n}));\n\nfunction AlbumCardSkeleton() {\n  const classes = useStyles();\n  return (\n    <Card className={classes.albumCard}>\n      <CardMedia className={classes.albumImages}>\n        <Skeleton animation=\"wave\" variant=\"rect\" width=\"300\" height=\"100%\" />\n      </CardMedia>\n      <CardContent>\n        <Skeleton width={100} />\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default AlbumCardSkeleton;\n","import { gql } from \"@apollo/client\";\n\nexport const MB_LOOKUP_ARTIST = gql`\n  query Artist($mbid: MBID!) {\n    lookup {\n      artist(mbid: $mbid) {\n        ...artistInfo\n      }\n    }\n  }\n\n  fragment artistInfo on Artist {\n    mbid\n    name\n    disambiguation\n    mediaWikiImages {\n      url\n    }\n    type\n    rating {\n      voteCount\n      value\n    }\n    releases(type: ALBUM, status: OFFICIAL) {\n      totalCount\n      nodes {\n        mbid\n        title\n        disambiguation\n        coverArtArchive {\n          artwork\n          images {\n            image\n            thumbnails {\n              large\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const MB_LOOKUP_RELEASE = gql`\n  query Release($mbid: MBID!) {\n    lookup {\n      release(mbid: $mbid) {\n        mbid\n        title\n        recordings {\n          nodes {\n            mbid\n            title\n            length\n            rating {\n              value\n              voteCount\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import { GridListTile, GridListTileBar, makeStyles } from \"@material-ui/core\";\nimport AudioTrackIcon from \"@material-ui/icons/Audiotrack\";\nimport { Rating } from \"@material-ui/lab\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(() => ({\n  tile: {\n    background: \"lightgrey\",\n    width: 200,\n    height: 200,\n    minHeight: 50,\n    minWidth: 50,\n    margin: 4,\n  },\n  icon: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n}));\nfunction TrackTile({ title, rateValue, voteCount }) {\n  const classes = useStyles();\n  return (\n    <GridListTile className={classes.tile}>\n      <AudioTrackIcon className={classes.icon} />\n      <GridListTileBar\n        title={title}\n        subtitle={\n          <>\n            <Rating value={rateValue} size=\"small\" precision={0.5} readOnly />\n            {voteCount && `(${voteCount})`}\n          </>\n        }\n      />\n    </GridListTile>\n  );\n}\n\nTrackTile.propTypes = {\n  title: PropTypes.string,\n  rateValue: PropTypes.number,\n  voteCount: PropTypes.number,\n};\n\nexport default TrackTile;\n","import { makeStyles } from \"@material-ui/core\";\nimport AudioTrackIcon from \"@material-ui/icons/Audiotrack\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(() => ({\n  tile: {\n    background: \"lightgrey\",\n    width: 200,\n    height: 200,\n    minHeight: 50,\n    minWidth: 50,\n    margin: 4,\n  },\n  subtitle: {\n    height: 68,\n    width: 200,\n    background: \"rgba(0, 0, 0, 0.5)\",\n    marginTop: -70,\n    \"& span\": {\n      marginLeft: 16,\n      marginRight: 16,\n    },\n  },\n  icon: {\n    width: \"100%\",\n    height: \"100%\",\n    color: \"rgba(0,0,0, 0.50)\",\n  },\n}));\n\nfunction TrackTileSkeleton({ title, rateValue, voteCount }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.tile}>\n      <AudioTrackIcon className={classes.icon} />\n      <div className={classes.subtitle}>\n        <Skeleton width={75} />\n        <Skeleton width={80} height={50} />\n      </div>\n    </div>\n  );\n}\n\nexport default TrackTileSkeleton;\n","import { useQuery } from \"@apollo/client\";\nimport {\n  AppBar,\n  GridList,\n  IconButton,\n  makeStyles,\n  Paper,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { PropTypes } from \"prop-types\";\nimport ErrorMessage from \"../../shared/components/error_message\";\nimport { MB_LOOKUP_RELEASE } from \"./ql_queries\";\nimport TrackTile from \"./track_tile\";\nimport TrackTileSkeleton from \"./track_tile_skeleton\";\n\nconst useStyles = makeStyles(() => ({\n  appBar: {\n    color: \"#000000\",\n    background: \"#ffffff\",\n    height: 69,\n  },\n  paper: {\n    display: \"flex\",\n    padding: 10,\n  },\n  trackTypography: {\n    marginTop: 20,\n  },\n  tracksGridList: {\n    width: \"100%\",\n    justifyContent: \"space-around\",\n  },\n}));\n\nfunction AlbumTracks({ album, onClose }) {\n  const classes = useStyles();\n  const { loading, error, data } = useQuery(MB_LOOKUP_RELEASE, {\n    variables: {\n      mbid: album.mbid,\n    },\n  });\n\n  const getTracks = () => data?.lookup?.release?.recordings?.nodes || [];\n\n  return (\n    <>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={onClose && onClose()}\n            aria-label=\"close\"\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Typography\n            className={classes.titleTypography}\n            variant=\"h4\"\n            gutterBottom\n          >\n            {album.title} - Tracks\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {error && <ErrorMessage />}\n      {!error && (\n        <Paper elevation={3} className={classes.paper}>\n          <GridList\n            className={classes.tracksGridList}\n            cols={3}\n            cellHeight={100}\n          >\n            {loading &&\n              [...new Array(8).keys()].map((i) => <TrackTileSkeleton key={i + 1} />)}\n            {data &&\n              getTracks().map((track) => (\n                <TrackTile\n                  key={track.mbid}\n                  title={track.title}\n                  rateValue={track.rating.value}\n                  voteCount={track.rating.voteCount}\n                />\n              ))}\n          </GridList>\n        </Paper>\n      )}\n    </>\n  );\n}\n\nAlbumTracks.propTypes = {\n  album: PropTypes.object,\n};\n\nexport default AlbumTracks;\n","export const preparePhotoList = (album) =>\n  album.coverArtArchive.artwork\n    ? album.coverArtArchive.images.reduce(\n        (accumulator, currentValue) => [\n          ...accumulator,\n          { source: currentValue.thumbnails.large },\n        ],\n        []\n      )\n    : [];\n","import { Avatar, Box, makeStyles, Typography } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport PropTypes from \"prop-types\";\n\nexport const useStyles = makeStyles(() => ({\n  box: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: \"10px 8px\",\n    width: 96,\n    height: 96,\n  },\n  nameTypography: {\n    margin: \"0 8px\",\n  },\n  artistInfoBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nfunction Title({ title, subtitle, avatarUri, rateValue, voteCount }) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.box}>\n      <Avatar className={classes.avatar} alt={title} src={avatarUri} />\n      <Box className={classes.artistInfoBox}>\n        <Typography\n          className={classes.nameTypography}\n          variant=\"h5\"\n          gutterBottom\n        >\n          {title}\n        </Typography>\n        <Typography\n          className={classes.nameTypography}\n          variant=\"caption\"\n          gutterBottom\n        >\n          {subtitle}\n        </Typography>\n        <Rating size=\"large\" value={rateValue} precision={0.5} readOnly />\n        <Typography\n          className={classes.nameTypography}\n          display=\"inline\"\n          variant=\"caption\"\n          gutterBottom\n        >\n          ({voteCount})\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  avatar: PropTypes.string,\n  rateValue: PropTypes.number,\n  voteCount: PropTypes.number,\n};\n\nexport default Title;\n","import { Box } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useStyles } from \"./title\";\n\nfunction TitleSkeleton() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.box}>\n      <Skeleton\n        className={classes.avatar}\n        variant=\"circle\"\n        width={96}\n        height={96}\n      />\n      <Box className={classes.artistInfoBox}>\n        <Skeleton width={100} />\n        <Skeleton className={classes.nameTypography} width={50} height={10} />\n        <Skeleton\n          className={classes.nameTypography}\n          variant=\"rect\"\n          width={100}\n          height={20}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default TitleSkeleton;\n","import { useQuery } from \"@apollo/client\";\nimport {\n  Container,\n  GridList,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport artistIcon from \"../../assets/artist.svg\";\nimport ErrorMessage from \"../../shared/components/error_message\";\nimport Header from \"../../shared/components/header\";\nimport AlbumCard from \"./album_card\";\nimport AlbumCardSkeleton from \"./album_card_skeleton\";\nimport AlbumTracks from \"./album_tracks\";\nimport { preparePhotoList } from \"./helpers\";\nimport { MB_LOOKUP_ARTIST } from \"./ql_queries\";\nimport Title from \"./title\";\nimport TitleSkeleton from \"./title_skeleton\";\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    marginTop: 20,\n  },\n  paper: {\n    display: \"flex\",\n    padding: 10,\n  },\n  box: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    width: 96,\n    height: 96,\n    margin: \"10px 8px\",\n  },\n  nameTypography: {\n    margin: \"0 8px\",\n  },\n  artistInfoBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  albumTypography: {\n    marginTop: 20,\n  },\n  albumImages: {\n    height: 200,\n    textAlign: \"center\",\n    background: \"lightgrey\",\n    \"& div\": {\n      width: \"auto\",\n    },\n  },\n  albumGridList: {\n    width: \"100%\",\n    justifyContent: \"space-around\",\n  },\n  albumCard: {\n    maxWidth: 500,\n    minWidth: \"300px !important\",\n    maxHeight: 300,\n  },\n}));\n\nfunction ArtistPage() {\n  const classes = useStyles();\n  const [selectedAlbum, selectAlbum] = useState(null);\n  const { id: mbid } = useParams();\n  const { loading, error, data } = useQuery(MB_LOOKUP_ARTIST, {\n    variables: {\n      mbid,\n    },\n  });\n\n  const getArtist = () => data && data.lookup.artist;\n  const handleAlbumOnClick = (album) => () => selectAlbum(album);\n\n  return (\n    <>\n      <Header />\n      <Container className={classes.container}>\n        {!selectedAlbum &&\n          (error ? (\n            <ErrorMessage />\n          ) : (\n            <>\n              <Paper elevation={3} className={classes.paper}>\n                {loading && <TitleSkeleton />}\n                {data && (\n                  <Title\n                    title={getArtist()?.name}\n                    subtitle={getArtist()?.disambiguation}\n                    avatarUri={\n                      getArtist()?.mediaWikiImages.length\n                        ? getArtist().mediaWikiImages[0].url\n                        : artistIcon\n                    }\n                    rateValue={getArtist()?.rating.value}\n                    voteCount={getArtist()?.rating.voteCount}\n                  />\n                )}\n              </Paper>\n              <Typography\n                className={classes.albumTypography}\n                variant=\"h4\"\n                gutterBottom\n              >\n                Albums\n              </Typography>\n              <Paper elevation={3} className={classes.paper}>\n                <GridList\n                  className={classes.albumGridList}\n                  cols={3}\n                  cellHeight={300}\n                  spacing={0}\n                >\n                  {loading &&\n                    [...new Array(3).keys()].map((i) => (\n                      <AlbumCardSkeleton key={i} />\n                    ))}\n                  {data &&\n                    getArtist()?.releases?.nodes?.map((album) => (\n                      <AlbumCard\n                        key={album.mbid}\n                        id={album.mbid}\n                        title={album.title}\n                        photos={preparePhotoList(album)}\n                        onClick={handleAlbumOnClick(album)}\n                      />\n                    ))}\n                </GridList>\n              </Paper>\n            </>\n          ))}\n        {selectedAlbum && (\n          <AlbumTracks album={selectedAlbum} onClose={handleAlbumOnClick} />\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default ArtistPage;\n","import {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport HomePage from \"../features/home\";\nimport SearchPage from \"../features/search\";\nimport ArtistPage from \"../features/artist\";\n\nfunction Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/artist/:id\">\n          <ArtistPage />\n        </Route>\n        <Route path=\"/search\">\n          <SearchPage />\n        </Route>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Routes;\n","import Routes from \"./routes\";\n\nfunction App() {\n  return <Routes />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { FETCH_CORS_MODE, MUSIC_BRAINS_SERVER } from \"../../configs\";\n\nexport const client = new ApolloClient({\n  uri: MUSIC_BRAINS_SERVER,\n  fetchOptions: {\n    mode: FETCH_CORS_MODE,\n  },\n  connectToDevTools: true,\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          search: {\n            keyArgs: [],\n            merge(existing = {}, incoming, args) {\n              if (\n                !existing ||\n                !Object.keys(existing).length ||\n                !args.variables.endCursor\n              ) {\n                return incoming;\n              }\n\n              const merged = JSON.parse(JSON.stringify(existing));\n              const existingKey = Object.keys(existing)[1];\n              const incomingKey = Object.keys(incoming)[1];\n              merged[existingKey].pageInfo = incoming[incomingKey].pageInfo;\n              merged[existingKey].edges.push(...incoming[incomingKey].edges);\n              return merged;\n            },\n          },\n        },\n      },\n    },\n  }),\n});\n","export const MUSIC_BRAINS_SERVER = \"http://api.ql.tavanarad.ir/\";\nexport const FETCH_CORS_MODE = \"no-cors\" // possible values: cors, no-cors, or same-origin\n","import { ApolloProvider } from \"@apollo/client\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./app/app\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { client } from \"./shared/repositories\";\n\nconst theme = createMuiTheme();\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}